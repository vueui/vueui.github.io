
// Usage docs

h1 Usage
:markdown
   ```html
   <ui-dropdown
         type="search selection"
         label="Gender"
         options="selectOptions"></ui-dropdown>
   ```
   ```js
   new Vue({
      data: {
         selectOptions: [
            { text: 'Male', value: 'male' },
            { text: 'Female', value: 'female'}
        ]
      }
   })
   ```
ui-dropdown(type="search selection" label="Gender" options="{{selectOptions}}" v-ref="dropdown")


// Behavior docs

h1 Behavior
p A dropdown instance has the following methods
div
   .ui.button(v-on="click: $.dropdown.$toggle") $toggle()
   .ui.button(v-on="click: $.dropdown.$hide") $hide()
   .ui.button(v-on="click: $.dropdown.$show") $show()


// Attributes docs

h1.ui.dividing.header Attributes

h2: strong type {String}
p Change the type of the Dropdown the same way you would normally do it in Semantic-UI by using class names
p 'type' is simply a list of classes which are appended to the dropdown

h4 Dropdown (default)
ui-dropdown(label="Gender" options="{{selectOptions}}")
:markdown
   ```html
   <ui-dropdown label="Gender" options="selectOptions"></ui-dropdown>
   ```
.ui.divider

h4 Selection
ui-dropdown(type="selection" label="Gender" options="{{selectOptions}}")
:markdown
   ```html
   <ui-dropdown type="selection" label="Gender" options="selectOptions"></ui-dropdown>
   ```
.ui.divider

h4 Search Selection
ui-dropdown(type="search selection" label="Gender" options="{{selectOptions}}")
:markdown
   ```html
   <ui-dropdown type="search selection" label="Gender" options="selectOptions"></ui-dropdown>
   ```
.ui.divider

h4 Inline

span The gender of this user is
   ui-dropdown(type="inline" label="Gender" options="{{selectOptions}}")

:markdown
   ```html
   <span> The gender of this user is
      <ui-dropdown type="inline" label="Gender" options="selectOptions"></ui-dropdown>
   </span>
   ```
.ui.divider

h2: strong label | {String}
p A label which appears on the dropdown when no option is selected

h2: strong on | {String} Default: 'click'
p Event used to trigger dropdown 'hover' or 'click'

h2: strong options | {Array}
p options should be a keypath/expression that points to an Array to use as the dropdown options

h2: strong name | {String}
p= 'sets the name of the <input /> inside the dropdown'


// Content

h1.ui.dividing.header= 'Customizing the <content>'

p If you need to customize the template of this module, the following partials are replacable:
   | content(select=".menu")
   | content(select=".item")

- var component = current.source
- var templatePath = 'https://github.com/vueui/vue-ui/blob/master/components/' + component + '/' + component + '.jade'
a(href="#{ templatePath }") #{ component }.jade